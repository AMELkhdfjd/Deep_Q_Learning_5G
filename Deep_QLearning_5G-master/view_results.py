import matplotlib
matplotlib.use("agg")
import matplotlib.pyplot as plt
import csv
import math
import numpy as np


def average(lista): # function to return the average of a list of data


    sum=0.0
    for l in range(0,len(lista)):
        sum=sum+lista[l] 
    return sum/len(lista)

def standardDev(lista): # function to calculate standard deviation
    sum = 0.0
    size = len(lista)
    avrg = average(lista)
    #print "average: ",avrg
    for l in range(0,len(lista)):
        sum = sum + math.pow((lista[l] - avrg), 2.0)    
    return math.sqrt(sum/(size));


x = []
y = []
topologies = ["16BA","abilene"]

########### arrivalRate20 ############
arrival_rate = "20"



lost_r= [0.9635943347955631, 0.9639364955522162, 0.9583541990839156, 0.9630484665073595, 0.9665691099986501, 0.9634258210432834, 0.962947138627546, 0.9605807795436274, 0.9611619145500798, 0.964606163801482, 0.9629174908484893, 0.9641324454441789, 0.9631590996190776, 0.9625207824675401, 0.9652480249351258, 0.9626642604372606, 0.963296352650276, 0.9599739008366549, 0.9633715084109875, 0.9646056163625255, 0.9597369555284312, 0.9615778940798636, 0.9647218154443615, 0.9586525477351066, 0.9623772224014493, 0.9604195392690866, 0.9626235636256154, 0.9615493793703629, 0.963236199590829, 0.9609612566337582, 0.9625144703607895, 0.9648661852759469, 0.9649295399058254, 0.9605831228793025, 0.9620333000375806, 0.9612109938301611, 0.961915958675205, 0.9638390378837647, 0.9615252628821289, 0.9613409480734132, 0.9635345085009537, 0.9648615987576117, 0.9669946759140423, 0.962361954030914, 0.9662416037199812, 0.9579446064646129, 0.9664775312237356, 0.9649288772555198, 0.9627855792030059, 0.9645618626041254, 0.9644776631532832, 0.9659792858920428, 0.9602225541512417, 0.9642586952595583, 0.9610125019911014, 0.961488361798634, 0.9651547060970243, 0.9642970634481541, 0.9612981547314182, 0.960908632550447, 0.96213809951236, 0.9631768952695328, 0.9632300195991146, 0.9655341620561962, 0.9603049575542754, 0.962540345208385, 0.9660251050722866, 0.9636586185527558, 0.961895351267172, 0.9610892424347108, 0.9589419859486678, 0.9604280565317032, 0.9591661029346101, 0.9627577617279908, 0.9606973187393466, 0.9658829749180513, 0.96417301874081, 0.9633281137899083, 0.9599504210476403, 0.9647126454884625, 0.9676721752174745, 0.9621040122937993, 0.9645328195142328, 0.9661679849626392, 0.9622282627372718, 0.9620496971061632, 0.9611037950519362, 0.9609483898432447, 0.9624289198330374, 0.9648374692613976, 0.9614502394243402, 0.9618316247821722, 0.961567582691738, 0.9617587988632799, 0.9600278890148578, 0.9648274492295241, 0.9623526644490573, 0.9672046711979926, 0.9607444750433966, 0.9671846727861759]


lost_r_old = [79.63800904977376, 72.96137339055794, 82.44897959183673, 81.15384615384616, 81.22448979591836, 86.28318584070797, 85.28138528138528, 82.75862068965517, 80.97345132743364, 83.203125, 83.01158301158301, 82.37704918032787, 81.32780082987551, 86.69724770642202, 77.01612903225806, 80.25751072961373, 80.24193548387096, 81.49606299212599, 82.35294117647058, 84.2911877394636, 79.2, 83.33333333333334, 84.05172413793103, 83.62068965517241, 85.2589641434263, 78.50877192982456, 82.15767634854771, 79.25311203319502, 80.80000000000001, 85.3211009174312, 81.53153153153153, 83.06451612903226, 89.49771689497716, 84.21052631578947, 86.32478632478633, 81.81818181818183, 80.21978021978022, 87.78280542986425, 84.91379310344827, 81.6593886462882, 89.21161825726142, 80.78602620087337, 82.15767634854771, 80.70866141732283, 84.45378151260505, 77.8688524590164, 79.84496124031007, 82.75862068965517, 82.89473684210526, 80.63241106719367, 85.53191489361703, 84.25196850393701, 83.46774193548387, 85.0, 82.0627802690583, 80.16877637130801, 79.36507936507937, 85.95744680851064, 82.5531914893617, 77.77777777777779, 81.33333333333333, 86.05577689243027, 89.7872340425532, 86.58008658008657, 76.61290322580645, 80.75471698113208, 80.32786885245902, 83.91304347826087, 85.59670781893004, 82.30088495575221, 78.9272030651341, 89.67136150234741, 80.40816326530611, 82.44897959183673, 78.43866171003717, 83.92156862745098, 83.6, 81.81818181818183, 81.25, 78.69565217391305, 84.5528455284553, 81.73913043478261, 83.82978723404256, 80.49792531120332, 81.56862745098039, 79.84189723320159, 78.4090909090909, 72.50996015936255, 84.82142857142857, 82.5910931174089, 78.57142857142857, 80.0, 80.5668016194332, 76.28458498023716, 83.53909465020575, 82.73092369477911, 74.609375, 78.51239669421489, 83.63636363636363, 81.99233716475096, 77.16535433070865, 80.32786885245902, 77.3076923076923, 76.89243027888446, 83.40425531914893, 77.63157894736842, 82.70042194092827, 76.03305785123968, 80.3921568627451, 80.50847457627118, 81.30841121495327, 81.70212765957446, 76.47058823529412, 77.10843373493977, 77.31092436974791, 83.81742738589212, 74.01574803149606, 77.04918032786885, 80.18867924528303, 79.84189723320159, 78.60082304526749, 86.88524590163934, 86.63793103448276, 80.16877637130801, 77.8688524590164, 78.02690582959642, 80.45112781954887, 84.25925925925925, 79.67479674796748, 78.66108786610879, 74.72118959107806, 77.88461538461539, 79.65367965367966, 77.82258064516128, 82.12765957446808, 73.44398340248964, 80.08474576271186, 80.08298755186722, 79.01234567901234, 79.07949790794979, 83.2618025751073, 75.98425196850394, 83.04347826086956, 76.73469387755102, 73.42342342342343, 79.48717948717949, 73.38709677419355, 75.51867219917013, 72.61410788381743, 76.65369649805449, 77.92792792792793, 76.07843137254902, 75.63025210084034, 85.23809523809524, 84.68085106382979, 78.66666666666666, 78.29787234042553, 70.12987012987013, 71.4859437751004, 76.13168724279835, 76.25, 78.9237668161435, 73.40425531914893, 73.84615384615385, 76.39484978540773, 79.74137931034483, 70.88607594936708, 78.29787234042553, 77.36625514403292, 70.15503875968993, 77.77777777777779, 76.06837606837607, 70.04048582995951, 83.2579185520362, 78.11158798283262, 69.56521739130434, 71.4859437751004, 67.35537190082644, 81.53846153846153, 69.84126984126983, 77.4703557312253, 71.37096774193549, 73.96694214876032, 72.39819004524887, 68.77637130801688, 76.05633802816901, 75.67567567567568, 73.22175732217573, 61.71003717472119, 77.431906614786, 74.40944881889764, 81.32780082987551, 65.82278481012658, 67.05882352941175, 60.526315789473685, 75.42372881355932, 61.84738955823293, 65.18218623481782, 71.1864406779661, 71.14624505928853]


font = {'family' : 'sans-serif',
        'size'   : 16}
matplotlib.rc('font', **font)



#for i in range(200):
#    x.append(i+1)


for i in range(120):
    y.append(i+1)
# Profit

## Old_code
margin_error1 =[]
lost_r_old_2 =[]


for i in range(200):
    x.append(i+1)
    
    #Profit (SARA, NR, AAR) x episodes, 
    #margin_error1.append(1.96*standardDev(lost_r_old[i])/math.sqrt(100))
    #lost_r_old[i] = average(lost_r_old[i])
    lost_r_old_2.append(lost_r_old[i]+0.1)










#plt.errorbar(x,lost_r,fmt="-", color="blue",ecolor="lightgray",capsize=2)
plt.errorbar(x,lost_r_old_2,fmt="-", color="blue",ecolor="lightgray",capsize=2)



#plt.axvline(x=12, color = "silver", linestyle='--')
#plt.errorbar(x,acceptance_ratio, fmt="-",label="SARA",ecolor="lightgray",capsize=2)
#plt.errorbar(x,profit_reability,fmt="-",label="NR", color="red", ecolor="lightgray",capsize=2)
#plt.errorbar(x,lost_r,fmt="-",label="AAR", color="gray",ecolor="lightgray",capsize=2)

#plt.errorbar(x,profit_r2c,fmt="-",label="AAR", color="blue",ecolor="lightgray",capsize=2)
plt.xlabel('Episodes')
plt.ylabel('Reward')
plt.title(' Reward vs Episodes')
#plt.legend()
plt.legend(fontsize = 14,loc='lower right', fancybox=True, shadow=True)
# plt.legend(loc='upper center', bbox_to_anchor=(0.5, 0.1), fancybox=True, shadow=True, ncol=3)
#plt.show() 
plt.savefig("Amel_2.png",bbox_inches = 'tight') 
plt.close()




